// Mocks generated by Mockito 5.4.0 from annotations
// in parking_system/test/blocs/car_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:parking_system/models/car_parking_model.dart' as _i4;
import 'package:parking_system/repository/car_parking_repo.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CarParkingRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCarParkingRepository extends _i1.Mock
    implements _i2.CarParkingRepository {
  MockCarParkingRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.CarParkingModel?> assignCarParking(
          _i2.CarParkingDetailsParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #assignCarParking,
          [params],
        ),
        returnValue: _i3.Future<_i4.CarParkingModel?>.value(),
      ) as _i3.Future<_i4.CarParkingModel?>);

  @override
  _i3.Future<bool> unAssignCarParking(_i2.CarParkingUnassignParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #unAssignCarParking,
          [params],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  String? getAvailableSpace(
    List<String>? list,
    dynamic data,
  ) =>
      (super.noSuchMethod(Invocation.method(
        #getAvailableSpace,
        [
          list,
          data,
        ],
      )) as String?);

  @override
  _i3.Future<bool> getUnAssign(String? bayId) => (super.noSuchMethod(
        Invocation.method(
          #getUnAssign,
          [bayId],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<String> getRandomResponse(String? size) => (super.noSuchMethod(
        Invocation.method(
          #getRandomResponse,
          [size],
        ),
        returnValue: _i3.Future<String>.value(''),
      ) as _i3.Future<String>);
}
